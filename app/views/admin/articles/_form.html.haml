= content_for :javascripts do
  = javascript_include_tag 'admin/languages_filter'
- if flash[:error]
  .notification.error.png_bg
    %div.flash-notice= flash[:error]
    = yield
-#- if @article.errors.any?
-#  #error_explanation.notification.information.png_bg
-#    %div.flash-notice
-#      %h2
-#        = pluralize(@article.errors.count, 'error')
-#        prohibited this article from being saved:
-#      %ul
-#        - @article.errors.full_messages.each do |msg|
-#          %li= msg
%fieldset
  / Set class to "column-left" or "column-right" on fieldsets to divide the form into columns
  %p
    %label
    = f.label :name
    = f.text_field :name, :class => 'text-input small-input'

  %p
    %label
    = f.label :category_id
    -#= f.select :category_id, options_for_select(Category.all.collect {|c| [c.name, c.id]},params[:id_cate])
    %select{:id => "category_id", :name => 'article[category_id]'}
      -Category.where("parent_id IS NULL").each do |main_category|
        - if main_category.id.to_s().hash == params[:id_cate].hash
          %option{value: main_category.id, :selected => params[:id_cate]}
            =main_category.name
          -Category.where("parent_id=#{main_category.id}").each do |child_category|
            %option{value: child_category.id}
              = "-- "+ child_category.name
        - else
          %option{value: main_category.id}
            =main_category.name
          -Category.where("parent_id=#{main_category.id}").each do |child_category|
            - if child_category.id.to_s().hash == params[:id_cate].hash
              %option{value: child_category.id, :selected=> params[:id_cate]}
                = "-- "+child_category.name
            - else
              %option{value: child_category.id}
                = "-- "+child_category.name




  %p
    %label
    = f.label :Image
    = f.file_field 'images'
    - unless params[:id].nil?
      %img{alt: "portfolio", src: "/article_images/#{Article.where("id=#{params[:id]}").first().images}", width: "220"}/

    %p
      %label
      = f.label :enable
      = f.check_box :enable, :checked => true
  -#%p
  -#  %label
  -#  = f.label :Language_category
  -#  = f.select :language_id, Language.order('name ASC').all.collect {|c| [c.name, c.id]},:selected => Language.where(:default=>'true').map(&:id), :class => 'language_filter_select'
