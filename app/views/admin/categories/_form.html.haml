= content_for :javascripts do
  = javascript_include_tag 'admin/languages_filter'
- if @category.errors.any?
  #error_explanation.notification.information.png_bg
    %div.flash-notice
      %h2
        = pluralize(@category.errors.count, 'error')
        prohibited this category from being saved:
      %ul
        - @category.errors.full_messages.each do |msg|
          %li= msg
%fieldset
  / Set class to "column-left" or "column-right" on fieldsets to divide the form into columns
  %p
    %label
    = f.label :name
    = f.text_field :name, :class => 'text-input small-input'

  %p
    %label
    = f.label :parent_id
    %select{:id=>"category_parent_id",:name=>"category[parent_id]"}
      %option Select Category
      -Category.where(:parent_id=>nil).each do |category|
        -if @category.parent_id==category.id
          %option{:selected => "",:value => "#{category.id}"} #{category.name}
          -Category.where(:parent_id=>category.id).each do |categoryparent|
            %option{:value =>"#{categoryparent.id}"}
              = "- #{categoryparent.name}"
        -else
          %option{:value => "#{category.id}"} #{category.name}
          -Category.where(:parent_id=>category.id).each do |categoryparent|
            -if @category.parent_id==categoryparent.id
              %option{:selected => "",:value =>"#{categoryparent.id}"}
                = "- #{categoryparent.name}"
            -else
              %option{:value =>"#{categoryparent.id}"}
                = "- #{categoryparent.name}"
    -#= f.select :parent_id, Category.order('parent_id desc,name asc').all.collect {|c| [c.name, c.id]} ,:selected=>@category.parent_id, :prompt => 'Select Category'
  -#%p
  -#  %label
  -#  = f.label :Language_category
  -#  = f.select :language_id, Language.order('name ASC').all.collect {|c| [c.name, c.id]},:selected => Language.where(:default=>'true').map(&:id), :class => 'language_filter_select'
